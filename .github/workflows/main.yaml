# .github/workflows/main.yml
# This single workflow file handles all logic, including failure analysis.
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Build and Tests
        run: |
          echo "Running build and test steps..."
          echo "This is a sample success message."
          echo "Simulating an error now..."
          # To test the failure notification, uncomment the next line
          # exit 1
          echo "This line will not be reached."

  notify-on-success:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: success() # Runs only if build-and-test succeeds
    steps:
      - name: Send Success Notification to Teams
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          PIPELINE_NAME: "${{ github.workflow }}"
          PIPELINE_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMIT_SHA: "${{ github.sha }}"
          AUTHOR: "${{ github.actor }}"
        run: |
          JSON_PAYLOAD=$(cat <<EOF
          { "type": "message", "attachments": [{"contentType": "application/vnd.microsoft.card.adaptive","content": {"type": "AdaptiveCard","version": "1.4","body": [{"type": "TextBlock","text": "CI/CD Pipeline Succeeded: ${PIPELINE_NAME}","weight": "Bolder", "size": "Large", "color": "Good"},{"type": "FactSet","facts": [{"title": "Status:", "value": "âœ… Success"},{"title": "Author:", "value": "${AUTHOR}"},{"title": "Commit:", "value": "$(echo ${COMMIT_SHA} | cut -c1-7)"}]}],"actions": [{"type": "Action.OpenUrl", "title": "View Pipeline Run", "url": "${PIPELINE_URL}"}]}}]}
          EOF
          )
          curl -X POST -H "Content-Type: application/json" -d "$JSON_PAYLOAD" "$TEAMS_WEBHOOK_URL"

  package-logs-on-failure:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: failure() # Runs only if build-and-test fails
    permissions:
      actions: read # Permission to read logs from other jobs
    steps:
      - name: Checkout repository # <-- This was the missing step
        uses: actions/checkout@v4
      - name: Fetch logs from failed job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # This command gets the logs of the previously failed job in this same workflow run.
          gh run view ${{ github.run_id }} --log-failed > failure_logs.txt
      - name: Upload failure logs as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: failure-logs
          path: failure_logs.txt
          retention-days: 1

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: package-logs-on-failure # Runs only AFTER logs are packaged
    if: failure() # Also requires the initial failure condition
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: pip install langchain langchain-google-genai requests
      - name: Download failure logs from artifact
        uses: actions/download-artifact@v4
        with:
          name: failure-logs # Downloads from the previous job in this same run
      - name: Run Analysis and Send Notification
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          PIPELINE_STATUS: "failure"
          PIPELINE_NAME: "${{ github.workflow }}"
          PIPELINE_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMIT_SHA: "${{ github.sha }}"
          AUTHOR: "${{ github.actor }}"
        run: |
          python notify.py
